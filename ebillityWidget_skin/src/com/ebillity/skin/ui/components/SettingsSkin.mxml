<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		creationComplete="init()">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.ebillity.core.view.ui.components.Settings")]
	</fx:Metadata>
	<fx:Declarations>

	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			[Bindable]
			private var roundingHourArrCol:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var roundingMinuteArrCol:ArrayCollection = new ArrayCollection();
			
			protected function init():void
			{
				// Initializing ArrayCollections of Rounding Hour and Minute	//////////////
				for (var hour:int = 0; hour<=11 ; hour++)
				{
					roundingHourArrCol.addItem(hour);
				}
				
				for (var minute:int = 0; minute<=59 ; minute++)
				{
					roundingMinuteArrCol.addItem(minute);
				}
				
			}
			
			protected function mySettingState_changeHandler(event:IndexChangeEvent):void
			{
				if(mySettingState.selectedIndex==1)
					myViewStack.height=-20;
				else
					myViewStack.height=40;
			}
			
		]]>
	</fx:Script>
	<s:VGroup paddingLeft="0"
			  paddingTop="0"
			  width="100%"
			  height="100%">

		<s:VGroup width="100%"
				  height="100%"
				  paddingLeft="20"
				  paddingTop="20">



			<s:ButtonBar id="mySettingState"
						 height="30"
						 requireSelection="true"
						 dataProvider="{myViewStack}"
						 skinClass="com.ebillity.skin.ui.controls.ButtonBarSkin"
						 change="mySettingState_changeHandler(event)">
				<s:layout>
					<s:HorizontalLayout gap="-1"
										columnWidth="80"
										variableColumnWidth="false"/>
				</s:layout>
			</s:ButtonBar>
			<s:VGroup gap="20">
				
				<mx:ViewStack id="myViewStack"
							  borderStyle="none"
							  width="100%">

					<s:NavigatorContent id="extedetContent" 
										label="Yes">
						<s:Label text="Timer Rouding"/>
						
						<s:HGroup paddingTop="20"
								  gap="20">
							<s:ComboBox id="roudinghouers" dataProvider="{roundingHourArrCol}"
											width="140" prompt="Hours"/>
							<s:ComboBox id="roundinminutes" dataProvider="{roundingMinuteArrCol}"
											width="140" prompt="Minutes" />
						</s:HGroup>

					</s:NavigatorContent>

					<s:NavigatorContent id="shortContent" 
										label="No" height="0">
					</s:NavigatorContent>

				</mx:ViewStack>

				<s:CheckBox id="autoStartTimerCheckBox"
							label="Auto start Timer with new Entries"/>
				<s:CheckBox id="runOnSystemStartupCheckBox"
							label="Run on system startup"/>
			</s:VGroup>

		</s:VGroup>
		<s:Group height="100%"
				 width="100%">
			<s:BorderContainer bottom="0"
							   height="42"
							   width="100%"
							   backgroundColor="#f1f1f2"
							   borderVisible="false">
				<s:Button bottom="10"
						  label="Cancel"
						  id="cancelButton"
						  left="10"/>
				<s:Button bottom="10"
						  label="Save"
						  id="saveButton"
						  right="10"/>
			</s:BorderContainer>
		</s:Group>

	</s:VGroup>





</s:Skin>
